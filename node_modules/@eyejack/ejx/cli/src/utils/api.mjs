import axios from 'axios'
import Preferences from 'preferences'

const BASE_URL = 'https://api.eyejack.xyz'
//const CLI_ID = 'xyz.eyejack.ejx'

export const useApi = (endpoint, auth = false, prefs) => {
  //const prefs = new Preferences(CLI_ID)
  let headers = {
    'Content-Type': 'application/json',
    Accept: 'application/json'
  }
  if (auth) {
    headers.Authorization = `Bearer ${prefs.auth.tokens.IdToken}`
  }

  const api = axios.create({
    baseURL: BASE_URL,
    headers
  })

  api.interceptors.request.use(
    async config => {
      if (auth) {
        config.headers = {
          Authorization: `Bearer ${prefs.auth.tokens.IdToken}`,
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      } else {
        config.headers = {
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      }

      return config
    },
    error => {
      Promise.reject(error)
    }
  )

  api.interceptors.response.use(
    response => response,
    async error => {
      let originalRequest = error.config
      if (error.response.status === 401 && !originalRequest._retry) {
        originalRequest._retry = true
        if (prefs.auth.tokens) {
          const result = await refreshTokens(prefs.auth.tokens.RefreshToken)

          prefs.auth.tokens.IdToken = result.IdToken
          prefs.auth.tokens.AccessToken = result.AccessToken
        }

        // axios.defaults.headers.common[
        //   'Authorization'
        // ] = `Bearer ${result.IdToken}`

        return api(originalRequest)
      }
      return Promise.reject(error)
    }
  )

  const post = async payload => {
    const { data } = await api.post(endpoint, payload)
    return data
  }

  return {
    post
  }
}

const refreshTokens = async refreshToken => {
  try {
    const { post } = useApi('/auth/token')
    const result = await post({
      refreshToken: refreshToken
    })
    return result.auth_tokens
  } catch (err) {
    console.log(err)
  }
}
